@using Lionk.Core.Component
@inject IComponentService ComponentService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudTextField Label="Name" @bind-Value=_widgetName />
        <IComponentInstanceList Components="_components" OnComponentSelected="ComponentSelected" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Submit">Ok</MudButton>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public Widget? Widget { get; set; }

    private string _widgetName
    {
        get => Widget?.InstanceName ?? string.Empty;
        set
        {
            if (Widget is not null) Widget.InstanceName = value;
        }
    }
    private List<Lionk.Core.Component.IComponent>? _components;

    protected override void OnInitialized()
    {
        if (Widget?.ComponentType is not null)
        {
            _components = ComponentService.GetInstances().Where(c => Widget.ComponentType.IsInstanceOfType(c)).ToList();
        }

    }

    private void ComponentSelected(Lionk.Core.Component.IComponent? component)
    {
        if (Widget is not null)
        {
            string instanceName = Widget.InstanceName ?? string.Empty;
            Lionk.Core.Component.IComponent? instance = ComponentService.GetInstanceByName(instanceName);
            if (instance is not null && instance is Widget widget)
            {
                

            Widget.Component = component;
            widget.Component = component;
            Snackbar.Add("Component selected", Severity.Success);
            return;
            }
        }
        Snackbar.Add("Widget is null", Severity.Error);
    }

    private void Submit()
    {
        if (MudDialog is null) return;
        MudDialog.Close(DialogResult.Ok(Widget));
    }

    private void Cancel()
    {
        if (MudDialog is null) return;
        MudDialog.Cancel();
    }
}
