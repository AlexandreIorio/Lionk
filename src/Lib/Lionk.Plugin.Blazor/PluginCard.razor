@using Lionk.Plugin
@using MudBlazor

@if (Plugin is null)
{
    <MudCard Outlined="true" Class="mud-card-hover">
        <MudCardContent>
            <MudText Typo="Typo.h6">No plugin selected</MudText>
        </MudCardContent>
    </MudCard>
}
else
{
    <MudCard Class="floating-card" Outlined="true">
        <MudCardHeader>
            <div>
                <MudText Typo="Typo.h6">@Plugin.Name</MudText>
                <MudText Typo="Typo.subtitle2">@Plugin.Version</MudText>
            </div>
        </MudCardHeader>
        <MudCardContent>
            <MudText Typo="Typo.body1">@Plugin.Description</MudText>
            <MudText Typo="Typo.body2">Author: @Plugin.Author</MudText>

            <MudCollapse Expanded="@ShowDependencies">
                <MudText Typo="Typo.caption">Dependencies:</MudText>
                <MudList T="string" Class="small-font non-selectable">
                    @foreach (var dependency in Plugin.Dependencies)
                    {
                        <MudListItem>@dependency</MudListItem>
                    }
                </MudList>
            </MudCollapse>
        </MudCardContent>
        <MudCardActions>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="ToggleDependencies">
                @(ShowDependencies ? "Hide Dependencies" : "Show Dependencies")
            </MudButton>
            <MudButton Color="Color.Error" OnClick="() => OnDelete.InvokeAsync(Plugin)">Delete</MudButton>
        </MudCardActions>
    </MudCard>
}

@code {
    private bool ShowDependencies { get; set; } = false;

    private void ToggleDependencies()
    {
        ShowDependencies = !ShowDependencies;
    }

    [Parameter]
    public Plugin? Plugin { get; set; }

    [Parameter]
    public EventCallback<Plugin> OnSelect { get; set; }

    [Parameter]
    public EventCallback<Plugin> OnDelete { get; set; }
}

<style>
    :root {
        --card-bg-color-light: #ffffff;
        --card-bg-color-dark: #2d2d2d;
        --card-shadow-light: 0px 4px 20px rgba(0, 0, 0, 0.1);
        --card-shadow-dark: 0px 4px 20px rgba(0, 0, 0, 0.7);
    }

    .mud-theme-dark .floating-card {
        background-color: var(--card-bg-color-dark);
        box-shadow: var(--card-shadow-dark);
        border: 1px solid #444;
    }

    .mud-theme-light .floating-card {
        background-color: var(--card-bg-color-light);
        box-shadow: var(--card-shadow-light);
        border: 1px solid #ddd;
    }

    .floating-card {
        transition: box-shadow 0.3s ease, transform 0.3s ease;
    }

        .floating-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 8px 30px rgba(0, 0, 0, 0.2);
        }

    .non-selectable {
        user-select: none;
    }

    .small-font {
        font-size: 0.8rem;
    }
</style>