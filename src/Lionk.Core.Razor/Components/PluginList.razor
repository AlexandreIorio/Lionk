@namespace Lionk.Core.Razor
@using Lionk.Core.Model.Component
@using Lionk.Core.TypeRegistery


<MudTable @ref="_table" T="KeyValuePair<ComponentTypeDescription, Factory>" Items="@TypesRegistery" MultiSelection="true" SelectionChangeable="false" Hover="true"
          @bind-SelectedItems="_selectedItem">
    <HeaderContent>
        <MudTh>Type Name</MudTh>
        <MudTh>Details</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Type Name">@context.Key.Name</MudTd>
        <MudTd>
            <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="() => ShowDetails(context.Key.Description)">Component details</MudButton>
        </MudTd>
    </RowTemplate>

    <ChildRowContent>
        @if (string.Compare(selectedDescription, context.Key.Description) == 0)
        {
            <MudTd colspan="5">
                <MudText Typo="Typo.h6">Description</MudText>
                <MudText Typo="Typo.body1">@selectedDescription</MudText>
            </MudTd>
        }


    </ChildRowContent>

    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100 }" />
    </PagerContent>
    <FooterContent>
        <MudTd colspan="5">Select All</MudTd>
    </FooterContent>
</MudTable>


@code {
    [Parameter] public List<KeyValuePair<ComponentTypeDescription, Factory>> TypesRegistery { get; set; } = new();
    MudTable<KeyValuePair<ComponentTypeDescription, Factory>> _table = new();
    private HashSet<KeyValuePair<ComponentTypeDescription, Factory>>? _selectedItem;
    private string selectedDescription = "";

    private void ShowDetails(string description)
    {
        if (string.Compare(selectedDescription, description) == 0)
        {
            selectedDescription = "";
            return;
        }
        selectedDescription = description;
    }

}
