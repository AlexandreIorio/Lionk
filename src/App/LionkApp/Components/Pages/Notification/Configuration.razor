@page "/configuration"

@using Lionk.Notification

<MudPaper Elevation="2" Class="pa-4 mb-4">
    <MudText Typo="Typo.h6">Notifier List</MudText>
    <MudSpacer />
    <MudTable Items="notifyers" Hover="true" Elevation="1">
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

<MudPaper Elevation="2" Class="pa-4">
    <div style="display: flex; align-items: center; justify-content: space-between;">
        <MudText Typo="Typo.h6">Channel List</MudText>
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="AddChannel">ADD</MudButton>
    </div>
    <MudSpacer />
    <MudTable Items="channels" Hover="true" Elevation="1">
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    public class MockNotifyer : INotifyer
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = string.Empty;

        public bool Equals(INotifyer? other)
        {
            return other != null && Id == other.Id;
        }
    }

    public class MockChannel : IChannel
    {
        public Guid Guid { get; set; }
        public string Name { get; set; } = string.Empty;
        public List<IRecipient> Recipients { get; set; } = new();
        public bool IsInitialized { get; set; } = false;

        public void AddRecipients(params IRecipient[] recipients)
        {
            Recipients.AddRange(recipients);
        }

        public void Initialize()
        {
            IsInitialized = true;
        }

        public void Send(INotifyer notifyer, Content content)
        {
            // Implémentation de l'envoi
        }

        public bool Equals(IChannel? other)
        {
            return other != null && Guid == other.Guid;
        }
    }

    private List<INotifyer> notifyers = new List<INotifyer>
    {
        new MockNotifyer { Id = Guid.NewGuid(), Name = "Chimpey" },
        new MockNotifyer { Id = Guid.NewGuid(), Name = "Clock alarm" },
        new MockNotifyer { Id = Guid.NewGuid(), Name = "MX321" }
    };

    private List<IChannel> channels = new List<IChannel>
    {
        new MockChannel { Guid = Guid.NewGuid(), Name = "Discord", IsInitialized = true },
        new MockChannel { Guid = Guid.NewGuid(), Name = "Telegram", IsInitialized = false },
        new MockChannel { Guid = Guid.NewGuid(), Name = "Push bullet", IsInitialized = true }
    };

    protected override void OnInitialized()
    {
        // Uncomment to unmock
        // notifyers = NotificationService.Notifyers.ToList();
        // channels = NotificationService.Channels.ToList();
    }

    private void AddChannel()
    {
        channels.Add(new MockChannel { Guid = Guid.NewGuid(), Name = "New channel", IsInitialized = true });
    }
}