@page "/configuration"
@inject IDialogService DialogService
@using LionkApp.Components.Widgets.Content.Notification
@using LionkApp.Components.Widgets.Dialogs
@using Lionk.Notification

<NotifierList Notifiers="MockNotifyers" Channels="MockChannels" />
<ChannelList Channels="MockChannels" />

@code {

    // Mock

    public class MockNotifyer : INotifyer
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = string.Empty;

        public bool Equals(INotifyer? other)
        {
            return other != null && Id == other.Id;
        }
    }

    public class MockChannel : IChannel
    {
        public Guid Guid { get; set; }
        public string Name { get; set; } = string.Empty;
        public List<IRecipient> Recipients { get; set; } = new();
        public bool IsInitialized { get; set; } = false;

        public void AddRecipients(params IRecipient[] recipients)
        {
            Recipients.AddRange(recipients);
        }

        public void Initialize()
        {
            IsInitialized = true;
        }

        public void Send(INotifyer notifyer, Content content)
        {
        }

        public bool Equals(IChannel? other)
        {
            return other != null && Guid == other.Guid;
        }
    }

    private List<INotifyer> MockNotifyers = new List<INotifyer>
    {
        new MockNotifyer { Id = Guid.NewGuid(), Name = "Chimpey" },
        new MockNotifyer { Id = Guid.NewGuid(), Name = "Clock alarm" },
        new MockNotifyer { Id = Guid.NewGuid(), Name = "MX321" }
    };

    private List<IChannel> MockChannels = new List<IChannel>
    {
        new MockChannel { Guid = Guid.NewGuid(), Name = "Discord", IsInitialized = true },
        new MockChannel { Guid = Guid.NewGuid(), Name = "Telegram", IsInitialized = false },
        new MockChannel { Guid = Guid.NewGuid(), Name = "Push bullet", IsInitialized = true }
    };
}
