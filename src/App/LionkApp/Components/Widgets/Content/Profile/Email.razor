@page "/email"
@using Lionk.Auth.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using System.ComponentModel.DataAnnotations
@inject UserAuthenticationStateProvider AuthStateProvider

<EditForm Model="@_model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12">
            <MudCard>
                <MudCardContent>
                    <MudTextField T="string" Label="Email" Text=@_email ReadOnly="true" />
                </MudCardContent>
                <MudCardContent>
                    <MudTextField Label="New email" Class="mt-3" @bind-Value="_model.NewEmail" For="@(() => _model.NewEmail)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to save your changes.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    public string _email = "";
    RegisterAccountForm _model = new RegisterAccountForm();

    public class RegisterAccountForm
    {
        [Required]
        [EmailAddress]
        public string? NewEmail { get; set; }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _email = AuthStateProvider.CurrentUser?.Email ?? "Not Logged In";
    }

    private void OnValidSubmit()
    {
        if (!string.IsNullOrEmpty(_model.NewEmail) && (_model.NewEmail != _email))
        {
            AuthStateProvider.CurrentUser?.UpdateEmail(_model.NewEmail);
        }

        StateHasChanged();
    }
}
